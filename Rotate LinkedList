pair<Node*,int> count (Node* head){
     Node* cur = head;
     int c = 0;
     Node* tail = head;
     while(cur!=NULL){
          tail = cur;
          cur = cur->next;
          c++;
     }
     return {tail,c};
}

Node* newtail(Node* head, int k){
     Node* curr = head;
     for(int i=1;i<k;i++)
          curr = curr->next;
     return curr;
}

Node *rotate(Node *head, int k) {
     pair<Node*,int> p = count(head);
     int c = p.second;
     k = k%c;
     if(head==NULL||head->next==NULL|| k==0 )return head;
     Node* tail = p.first;
     Node* t = newtail(head,c-k);
     tail->next = head;
     head = t->next;
     t->next=NULL;
     return head;
}
